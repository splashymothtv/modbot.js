"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GS = void 0;
const fs_jetpack_1 = require("fs-jetpack");
const glob_1 = require("glob");
const node_path_1 = require("node:path");
const IgnoreFiles_1 = require("./IgnoreFiles");
class GS {
    pattern;
    found = [];
    ignore;
    constructor(pattern, ignoreFileName, optionalIgnoreList = []) {
        this.pattern = pattern;
        this.ignore = new IgnoreFiles_1.IgnoreFiles({
            fileName: ignoreFileName,
            path: pattern,
            optionalIgnoreList,
        });
        if (Array.isArray(this.pattern)) {
            this.pattern = this.pattern.map(path => this.#normalizePath(path));
        }
        else {
            this.pattern = this.#normalizePath(this.pattern);
        }
        this.found = (0, glob_1.globSync)(this.pattern, {
            dot: true,
            ignore: this.ignore.list,
        });
    }
    #normalizePath(path) {
        try {
            path = path.replace(/\\/g, "/");
            if (!(0, node_path_1.isAbsolute)(path))
                path = path.replace(/^(\.|~)$|^(\.|~)\/|^\/|\/$/g, "") || "**";
            path = (0, fs_jetpack_1.exists)(path) === "dir" ? path.replace(/\/$/, "") + "/**" : path;
        }
        catch {
            path = path.replace(/\/$/, "") + "/**";
        }
        return path;
    }
}
exports.GS = GS;
