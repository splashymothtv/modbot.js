"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Base_1 = __importDefault(require("./Base"));
/**
 * Base for app structures
 */
class BaseApp extends Base_1.default {
    constructor(discloudApp, data) {
        super(discloudApp);
        this._patch(data);
    }
    _patch(data) {
        if ("id" in data)
            this.id = data.id;
        return super._patch(data);
    }
    /**
     * Set the quantity of ram to your application
     *
     * @param quantity - Minimum values is `100` to `bot` or `512` for `site`
     * @returns Promise {@link RESTPutApiAppRamResult}
     */
    async setRam(quantity) {
        return this.discloudApp.apps.ram(this.id, quantity);
    }
    /**
     * Get backups of your application on Discloud
     */
    backup() {
        return this.discloudApp.apps.backup(this.id);
    }
    /**
     * Get logs of your application on Discloud
     */
    terminal() {
        return this.discloudApp.apps.terminal(this.id);
    }
    /**
     * Delete your application from Discloud.
     */
    delete() {
        return this.discloudApp.apps.delete(this.id);
    }
    /**
     * Restart your application on Discloud
     */
    restart() {
        return this.discloudApp.apps.restart(this.id);
    }
    /**
     * Start your application on Discloud
     */
    start() {
        return this.discloudApp.apps.start(this.id);
    }
    /**
     * Stop your application on Discloud
     *
     * @param appID - You app id
     */
    stop() {
        return this.discloudApp.apps.stop(this.id);
    }
    /**
     * Update an of your apps on Discloud.
     *
     * @param options - Options to update your app.
     * @returns Promise {@link RESTPutApiAppCommitResult}
     */
    update(options) {
        return this.discloudApp.apps.update(this.id, options);
    }
    /**
     * @returns app id
     */
    toString() {
        return this.id;
    }
}
exports.default = BaseApp;
