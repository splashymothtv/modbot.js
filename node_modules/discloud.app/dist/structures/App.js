"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AppApt_1 = __importDefault(require("./AppApt"));
const AppStatus_1 = __importDefault(require("./AppStatus"));
const AppTeam_1 = __importDefault(require("./AppTeam"));
const BaseApp_1 = __importDefault(require("./BaseApp"));
class App extends BaseApp_1.default {
    /**
     * Moderators IDs of your app
     */
    mods = [];
    constructor(discloudApp, data) {
        super(discloudApp, data);
        this._patch(data);
    }
    _patch(data) {
        if ("autoDeployGit" in data)
            this.autoDeployGit = data.autoDeployGit;
        if ("autoRestart" in data)
            this.autoRestart = data.autoRestart;
        if ("exitCode" in data)
            this.exitCode = data.exitCode;
        if ("lang" in data)
            this.lang = data.lang;
        if ("mainFile" in data)
            this.mainFile = data.mainFile;
        if ("mods" in data)
            this.mods = data.mods;
        if ("name" in data)
            this.name = data.name;
        if ("online" in data)
            this.online = data.online;
        if ("ram" in data)
            this.ram = data.ram;
        if ("ramKilled" in data)
            this.ramKilled = data.ramKilled;
        this.apt ??= new AppApt_1.default(this.discloudApp, data);
        this.team ??= new AppTeam_1.default(this.discloudApp, data);
        this.status ??= new AppStatus_1.default(this.discloudApp, data);
        this.apt._patch(data);
        this.team._patch(data);
        this.status._patch(data);
        return super._patch(data);
    }
}
exports.default = App;
