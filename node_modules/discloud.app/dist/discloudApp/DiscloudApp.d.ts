/// <reference types="node" />
import { REST } from "@discloudapp/rest";
import EventEmitter from "node:events";
import { ClientEvents, DiscloudAppOptions } from "../@types";
import AppAptManager from "../managers/AppAptManager";
import AppManager from "../managers/AppManager";
import AppTeamManager from "../managers/AppTeamManager";
import TeamAppManager from "../managers/TeamAppManager";
import User from "../structures/User";
/**
 * Client for Discloud API
 */
interface DiscloudApp {
    emit: (<K extends keyof ClientEvents>(event: K, ...args: ClientEvents[K]) => boolean) & (<S extends string | symbol>(event: Exclude<S, keyof ClientEvents>, ...args: any[]) => boolean);
    off: (<K extends keyof ClientEvents>(event: K, listener: (...args: ClientEvents[K]) => void) => this) & (<S extends string | symbol>(event: Exclude<S, keyof ClientEvents>, listener: (...args: any[]) => void) => this);
    on: (<K extends keyof ClientEvents>(event: K, listener: (...args: ClientEvents[K]) => void) => this) & (<S extends string | symbol>(event: Exclude<S, keyof ClientEvents>, listener: (...args: any[]) => void) => this);
    once: (<K extends keyof ClientEvents>(event: K, listener: (...args: ClientEvents[K]) => void) => this) & (<S extends string | symbol>(event: Exclude<S, keyof ClientEvents>, listener: (...args: any[]) => void) => this);
    removeAllListeners: (<K extends keyof ClientEvents>(event?: K) => this) & (<S extends string | symbol>(event?: Exclude<S, keyof ClientEvents>) => this);
}
declare class DiscloudApp extends EventEmitter {
    #private;
    readonly options: DiscloudAppOptions;
    readonly rest: REST;
    readonly appApt: AppAptManager;
    readonly apps: AppManager;
    readonly appTeam: AppTeamManager;
    readonly teamApps: TeamAppManager;
    readonly user: User;
    constructor(options?: DiscloudAppOptions);
    get token(): string;
    /**
     * Login on Discloud API
     *
     * @param token - Your Discloud token
     */
    login(token?: string): Promise<string>;
}
export default DiscloudApp;
//# sourceMappingURL=DiscloudApp.d.ts.map