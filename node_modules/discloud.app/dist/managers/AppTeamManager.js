"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const v2_1 = require("@discloudapp/api-types/v2");
const util_1 = require("@discloudapp/util");
const BaseManager_1 = __importDefault(require("./BaseManager"));
/**
 * Manager for Team on your application on Discloud
 */
class AppTeamManager extends BaseManager_1.default {
    constructor(discloudApp) {
        super(discloudApp);
    }
    /**
     * Add a mod for you application on Discloud
     *
     * @param appID - The app id
     * @param modID - The mod id
     * @param perms - The permissions for the mod. See {@link ModPermissionsResolvable}
     * @returns Promise {@link ApiAppTeamManager}
     */
    async create(appID, modID, perms) {
        const data = await this.discloudApp.rest.post(v2_1.Routes.appTeam(appID), {
            body: {
                modID,
                perms: new util_1.ModPermissionsBF(perms).toArray(),
            },
        });
        return data.app;
    }
    /**
     * Edit permissions of a mod for you application on Discloud
     *
     * @param appID - The app id
     * @param modID - The mod id
     * @param perms - The permissions for the mod. See {@link ModPermissionsResolvable}
     * @returns Promise {@link ApiAppTeamManager}
     */
    async edit(appID, modID, perms) {
        const data = await this.discloudApp.rest.put(v2_1.Routes.appTeam(appID), {
            body: {
                modID,
                perms: new util_1.ModPermissionsBF(perms).toArray(),
            },
        });
        return data.app;
    }
    /**
     * Remove a mod from you application on Discloud
     *
     * @param appID - The app id
     * @param modID - The mod id
     * @returns Promise {@link RESTDeleteApiAppTeamResult}
     */
    async delete(appID, modID) {
        const data = await this.discloudApp.rest.delete(v2_1.Routes.appTeam(appID, modID));
        return data;
    }
    /**
     * Get mods information for your app on Discloud
     *
     * @returns Promise {@link RESTGetApiAppTeamResult}
     */
    async fetch(appID) {
        const data = await this.discloudApp.rest.get(v2_1.Routes.appTeam(appID));
        return data.team;
    }
}
exports.default = AppTeamManager;
